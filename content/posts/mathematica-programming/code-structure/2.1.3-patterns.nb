(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     48635,       1325]
NotebookOptionsPosition[     37664,       1143]
NotebookOutlinePosition[     38092,       1160]
CellTagsIndexPosition[     38049,       1157]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\"\<Title\>\"", "\[Rule]", "\"\<Patterns\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<Slug\>\"", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Path\>\"", "\[Rule]", 
    "\"\<Mathematica Programming/Code Structure\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"\"\<ID\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<2.1.3\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Date\>\"", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sat 7 Jul 2018 02:47:02\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}],
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2018", ",", "7", ",", "7", ",", "2", ",", "47", ",", 
              "2"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "7.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Modified\>\"", "\[Rule]", "Now"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Authors\>\"", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Categories\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<mathematica-programming\>\"", ",", "\"\<code-structure\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Tags\>\"", "\[Rule]", 
    RowBox[{"{", "\"\<patterns\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<ExportOptions\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Save\>\"", "\[Rule]", "True"}], "}"}]}]}], 
  "\[IndentingNewLine]", "\[RightAssociation]"}]], "Metadata",
 CellChangeTimes->{{3.7230674328716917`*^9, 3.723067452190956*^9}, {
   3.7230679580568*^9, 3.7230680128473673`*^9}, {3.7232007087815647`*^9, 
   3.7232007883818817`*^9}, 3.723201146733818*^9, {3.723203002317672*^9, 
   3.723203008852455*^9}, {3.723203499603772*^9, 3.7232035545127563`*^9}, {
   3.723251256681574*^9, 3.723251262240631*^9}, {3.723348490300707*^9, 
   3.723348528182694*^9}, {3.723348665617456*^9, 3.723348677211186*^9}, {
   3.740780128268365*^9, 3.740780135555444*^9}, {3.740939518875289*^9, 
   3.740939519354929*^9}},ExpressionUUID->"193e9afe-58b0-4309-9e29-\
8bb496c1c725"],

Cell[CellGroupData[{

Cell["Patterns", "Subsection",
 CellChangeTimes->{{3.684256979870531*^9, 3.684256980950138*^9}, {
  3.684258931706821*^9, 3.684258933563141*^9}, {3.6846333808934793`*^9, 
  3.684633381053042*^9}},ExpressionUUID->"2608ca79-b897-43eb-a16a-\
81676a0d3b0f"],

Cell[CellGroupData[{

Cell["Simple Patterns", "Subsubsection",ExpressionUUID->"8e94d53d-fa48-4f13-b2df-fb728037d0b3"],

Cell["\<\
Patterns and how to use them might be the most important thing to understand \
in Mathematica\
\>", "Text",
 CellChangeTimes->{{3.684631851981655*^9, 3.6846318705491667`*^9}, {
  3.684632027785494*^9, 
  3.684632030200037*^9}},ExpressionUUID->"0f302fac-110a-4f96-b99b-\
43ccce8e1d9f"],

Cell["\<\
At some level, due to its expression-centered structure, Mathematica is just \
a huge pattern matching machine\
\>", "Text",
 CellChangeTimes->{{3.6846320327972527`*^9, 3.684632047679636*^9}, {
  3.684632094628109*^9, 3.684632095572055*^9}, {3.684632136334038*^9, 
  3.6846321874659023`*^9}},ExpressionUUID->"efbea579-4ee6-4d10-bfc8-\
fe1c6d1faa93"],

Cell["\<\
The most basic pattern is just an underscore, but of course it has an \
expression structure:\
\>", "Text",
 CellChangeTimes->{{3.684632457053464*^9, 3.684632486059663*^9}, {
  3.6846326113066797`*^9, 
  3.684632649953614*^9}},ExpressionUUID->"d7eed2cf-a7ae-4377-a473-\
74b796b9b4e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_", " ", "//", " ", "FullForm"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.6846322734361362`*^9, 3.68463227497045*^9}, {
   3.684632479996584*^9, 3.6846324885394983`*^9}, {3.6846326206905518`*^9, 
   3.684632655465763*^9}, {3.72334868292485*^9, 3.7233486829306583`*^9}, 
   3.723388934446116*^9},ExpressionUUID->"82c5742c-6951-4c19-a30c-\
7cd8de09e353"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Blank", "[", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.684632656223143*^9},ExpressionUUID->"dca33cab-ec18-4c6b-bc8b-\
af10fcb8fc93"]
}, Open  ]],

Cell["\<\
We can also provide a name for our pattern which has in various function\
\>", "Text",
 CellChangeTimes->{{3.684632811192823*^9, 3.6846328175216503`*^9}, {
  3.684632896894532*^9, 
  3.6846329348795633`*^9}},ExpressionUUID->"96334208-0803-4c1a-abf2-\
c04776596c78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p_", "//", "FullForm"}]], "Code",
 CellChangeTimes->{{3.684632769013451*^9, 3.6846327753012257`*^9}, 
   3.723388934468992*^9},ExpressionUUID->"a8e0cdbd-dc76-4e41-9a81-\
ccc29567b168"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Pattern", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Blank", "[", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.684632776080464*^9},ExpressionUUID->"074d53fc-4a6f-4ea2-abce-\
66a5e1148961"]
}, Open  ]],

Cell[TextData[{
 "You\[CloseCurlyQuote]ll notice the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Blank", "[", "]"}], TextInlineCell]], "InlineInput",
  ExpressionUUID->"8f0302e4-5804-4b55-ac6e-2f37f61c4f19"],
 " remains. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Blank", "[", "]"}], TextInlineCell]], "InlineInput",
  ExpressionUUID->"acd6be6f-2afb-45f4-ab4b-d59029c091be"],
 " matches any single expression. For pattern matching \
there\[CloseCurlyQuote]s the function ",
 Cell[BoxData[
  FormBox["MatchQ", TextInlineCell]], "InlineInput",ExpressionUUID->
  "1d6082b6-bbbb-4c5d-880a-5a89f1d4c9f8"],
 ". It will return whether the expression as in its first argument matches \
the pattern in its second."
}], "Text",
 CellChangeTimes->{{3.684632805366632*^9, 3.684632808474135*^9}, {
  3.684633003393839*^9, 3.684633015814328*^9}, {3.6846330992021837`*^9, 
  3.684633122208403*^9}, {3.684633157045635*^9, 
  3.684633269562574*^9}},ExpressionUUID->"fdfb0aac-e4cd-428a-846d-\
bb37448a5269"],

Cell["\<\
It doesn\[CloseCurlyQuote]t have to have a pattern as its second argument \
though:\
\>", "Text",
 CellChangeTimes->{{3.6846332908227243`*^9, 
  3.684633309656431*^9}},ExpressionUUID->"93e0e404-833a-4400-8ada-\
1842f586a1cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", "a"}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.6846331661994047`*^9, 3.684633167381502*^9}, {
   3.68463320114835*^9, 3.68463320582053*^9}, {3.684633284243413*^9, 
   3.6846332852652063`*^9}, {3.7233486967193203`*^9, 3.7233486967250843`*^9}, 
   3.7233889345049343`*^9},ExpressionUUID->"45b8b2d5-f8d1-4ddc-81f4-\
376020734705"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684633285906358*^9},ExpressionUUID->"58f24fd6-535f-484f-b52d-\
2dd0ebc4652d"]
}, Open  ]],

Cell["But the following will also match:", "Text",
 CellChangeTimes->{{3.6846333150420637`*^9, 
  3.684633329703849*^9}},ExpressionUUID->"3fa9c12b-c781-4b2c-9015-\
5eee65718f1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", "_"}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684633343097001*^9, 3.684633345879736*^9}, {
   3.723348696727717*^9, 3.72334869673282*^9}, 
   3.7233889345343723`*^9},ExpressionUUID->"862ec84b-4a21-415c-be7f-\
7b140a5ad8fa"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6846333462106333`*^9},ExpressionUUID->"593fd069-e835-466e-ad23-\
f45aec88a750"]
}, Open  ]],

Cell["\<\
As will the following where we simply named one of the parameters:\
\>", "Text",
 CellChangeTimes->{{3.740972775287431*^9, 
  3.740972790135373*^9}},ExpressionUUID->"28921913-c22c-4a7b-aa84-\
bb12e75dc3e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", " ", "p_"}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684633343097001*^9, 3.68463335862317*^9}, {
   3.723348696734962*^9, 3.723348696739393*^9}, 3.723388934575961*^9, 
   3.7409727734287243`*^9},ExpressionUUID->"1492a0e0-97de-47a8-8edf-\
8e07e12443b7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6846333462106333`*^9, 
  3.684633361567959*^9}},ExpressionUUID->"7708a3d0-96ef-45dd-a656-\
53e48f6ffb22"]
}, Open  ]],

Cell[TextData[{
 "Patterns of this type can also have a ",
 Cell[BoxData[
  FormBox["Head", TextInlineCell]], "InlineInput",ExpressionUUID->
  "f04ed76d-f3df-4e65-b782-e121ddbacfe4"],
 " that must match, which is specified after the underscore. "
}], "Text",
 CellChangeTimes->{{3.6846333706452723`*^9, 3.684633524099738*^9}, 
   3.684633609575375*^9, {3.740972794687216*^9, 
   3.740972796129821*^9}},ExpressionUUID->"53aaa60c-b655-42cd-804a-\
a070be89126f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_a", "//", "FullForm"}]], "Code",
 CellChangeTimes->{{3.684633622002495*^9, 3.6846336366892147`*^9}, 
   3.7233889346060123`*^9},ExpressionUUID->"11e35b54-84fa-47ed-88bc-\
26f1cf00975b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Blank", "[", "a", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.684633634927371*^9, 
  3.6846336372785807`*^9}},ExpressionUUID->"6f3f8f25-811e-477f-9da4-\
39708c079cdc"]
}, Open  ]],

Cell[TextData[{
 "Any expression with ",
 Cell[BoxData["a"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "0696524b-1c4b-4f13-8e40-03472788bf51"],
 " as its ",
 Cell[BoxData["Head"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "09252325-346a-40a1-8d5c-760620fbd38e"],
 " will match this pattern. For instance an empty invocation:"
}], "Text",
 CellChangeTimes->{{3.6846333706452723`*^9, 3.684633524099738*^9}, {
  3.684633611169182*^9, 3.684633617233221*^9}, {3.740972806366662*^9, 
  3.740972845526473*^9}},ExpressionUUID->"fc634065-630a-4972-8094-\
b5637c849a57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", "]"}], ",", " ", "_a"}], "]"}]], "Code",
 CellChangeTimes->{{3.6846334877113943`*^9, 3.684633494076726*^9}, 
   3.7233889346449623`*^9, 
   3.740972811850271*^9},ExpressionUUID->"9d493f99-9774-441b-9488-\
f1451f371434"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684633494538075*^9},ExpressionUUID->"aa5dad3d-de57-4a8b-bd94-\
87f84b67ff1f"]
}, Open  ]],

Cell["With arguments", "Text",
 CellChangeTimes->{{3.740972847765915*^9, 
  3.7409728552087803`*^9}},ExpressionUUID->"9c18d4c2-eca5-4025-87e8-\
6224bd965a3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", " ", "_a"}], "]"}]], "Code",\

 CellChangeTimes->{{3.6846334877113943`*^9, 3.684633494076726*^9}, {
   3.684633536308852*^9, 3.6846335397394133`*^9}, 3.723388934667904*^9, 
   3.740972852374423*^9},ExpressionUUID->"c4f1b517-b561-418e-99ae-\
ea41987532cc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684633541591984*^9},ExpressionUUID->"2384b9a1-2c1f-4990-aaeb-\
c9c161612752"]
}, Open  ]],

Cell["Or incredibly deeply nested:", "Text",
 CellChangeTimes->{{3.74097285707806*^9, 
  3.740972863704541*^9}},ExpressionUUID->"00280b34-12d1-4f12-ae38-\
3b6a489ce840"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"a", "[", 
     RowBox[{"a", "[", 
      RowBox[{"a", "[", 
       RowBox[{"a", "[", 
        RowBox[{"a", "[", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", " ", 
   "_a"}], "]"}]], "Code",
 CellChangeTimes->{{3.6846334877113943`*^9, 3.684633494076726*^9}, {
   3.684633545692605*^9, 3.684633554275385*^9}, 3.723388934710079*^9, 
   3.740972864822926*^9},ExpressionUUID->"55290193-7847-4ed6-994f-\
582e0c329323"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684633555010914*^9},ExpressionUUID->"8eebb3fa-79bf-46e2-abc8-\
86a32cec33d8"]
}, Open  ]],

Cell["But the following won\[CloseCurlyQuote]t:", "Text",
 CellChangeTimes->{{3.684633559538293*^9, 
  3.684633566282526*^9}},ExpressionUUID->"cbedbc2d-2e9b-4c83-89b5-\
21c1b46268a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", " ", "_a"}], "]"}]], "Code",
 CellChangeTimes->{{3.6846334877113943`*^9, 3.6846335134360228`*^9}, 
   3.7233889347373343`*^9, 
   3.740939502960959*^9},ExpressionUUID->"b69209b6-1b2f-4b86-ac6d-\
f1d13387bec5"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.684633494538075*^9, 
  3.684633513784536*^9}},ExpressionUUID->"5e53e4c3-bef5-4f9d-8f4b-\
f4e47a374edf"]
}, Open  ]],

Cell["\<\
Along with a head one can also specify a test condition which will be applied \
to the thing that\[CloseCurlyQuote]s being matched against\
\>", "Text",
 CellChangeTimes->{{3.6846335750830593`*^9, 3.6846335996333857`*^9}, {
  3.684633655088035*^9, 
  3.684633675191667*^9}},ExpressionUUID->"a787b50c-afa6-4427-9a3f-\
371d910869a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"_a", "?", "test"}], "//", "FullForm"}]], "Code",
 CellChangeTimes->{{3.684633647961554*^9, 3.684633652912621*^9}, {
   3.684633686286832*^9, 3.684633712191621*^9}, 
   3.723388934763878*^9},ExpressionUUID->"9b08db87-9f1e-4bec-b045-\
ef5f0871b552"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"PatternTest", "[", 
    RowBox[{
     RowBox[{"Blank", "[", "a", "]"}], ",", "test"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.68463370832003*^9, 
  3.6846337124553347`*^9}},ExpressionUUID->"dd56f035-4632-4648-aea1-\
e9801de0e60d"]
}, Open  ]],

Cell["Which means the following will match:", "Text",
 CellChangeTimes->{{3.684633717486957*^9, 
  3.684633728101919*^9}},ExpressionUUID->"15b83bd1-0bce-49ca-bb02-\
89ecd6435bbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"_a", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "1"}], "&"}], ")"}]}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.6846337327047043`*^9, 3.684633793533716*^9}, 
   3.723388934809601*^9},ExpressionUUID->"1f269a38-6a72-45d6-92af-\
391e5dd46bc1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.68463374098722*^9, 
  3.684633793912148*^9}},ExpressionUUID->"8207d92c-9a5b-4c58-84ba-\
14e9efe075fd"]
}, Open  ]],

Cell["\<\
But the other cases will not. Here we clearly have too few arguments:\
\>", "Text",
 CellChangeTimes->{{3.684633791149912*^9, 3.684633798804656*^9}, {
  3.740972885472048*^9, 
  3.740972900034628*^9}},ExpressionUUID->"7aa1146a-7d11-46c6-9983-\
35fc5e87d54c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", "]"}], ",", " ", 
   RowBox[{"_a", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "1"}], "&"}], ")"}]}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.6846337327047043`*^9, 3.684633803086582*^9}, 
   3.684633838868409*^9, 3.72338893483569*^9, 
   3.740972876461956*^9},ExpressionUUID->"8210657f-e35b-47ff-bc36-\
87c4ed49be52"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6846338035039463`*^9, 
  3.684633846403672*^9},ExpressionUUID->"c2c938cf-25bf-4ae0-9614-\
7ef4e26ed6c8"]
}, Open  ]],

Cell["\<\
Here it\[CloseCurlyQuote]s hard to see, but the outer-most structure has only \
one argument, so it also won\[CloseCurlyQuote]t match:\
\>", "Text",
 CellChangeTimes->{{3.740972907794894*^9, 
  3.7409729365324507`*^9}},ExpressionUUID->"4c914bf8-ef62-4887-8035-\
705b6c7a803a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"a", "[", 
     RowBox[{"a", "[", 
      RowBox[{"a", "[", 
       RowBox[{"a", "[", 
        RowBox[{"a", "[", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"_a", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "#"}], ">", "1"}], "&"}], ")"}]}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.684633818596765*^9, 3.684633836532699*^9}, 
   3.7233889348602467`*^9},ExpressionUUID->"959be473-3cc8-43bc-a566-\
9c6c534ee005"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.684633832949773*^9, 
  3.684633847762616*^9}},ExpressionUUID->"e17cac41-8c91-4097-89bb-\
dcc3dd228450"]
}, Open  ]],

Cell["Patterns can also be specified as parts of an expression:", "Text",
 CellChangeTimes->{{3.684633956440487*^9, 
  3.684633986892741*^9}},ExpressionUUID->"de8b5f28-ab40-4365-a230-\
c2c1499da8f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"_", ",", "_", ",", "_"}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684633987730358*^9, 3.684634003676196*^9}, 
   3.723388934880807*^9},ExpressionUUID->"099965f6-7869-45c9-ba38-\
2cf52d5f6a8a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684634004230555*^9},ExpressionUUID->"8c9a5112-7c2d-43df-8bc1-\
3fa286d431da"]
}, Open  ]],

Cell["\<\
Patterns can also be specified as matching 1 or more elements with a double \
underscore:\
\>", "Text",
 CellChangeTimes->{{3.684633862051982*^9, 
  3.684633893600243*^9}},ExpressionUUID->"44ba5b47-199b-4fb0-bc89-\
75eba78f532c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"__", "//", "FullForm"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684633898170032*^9, 3.684633900896451*^9}, {
   3.723348696744376*^9, 3.723348696748556*^9}, 
   3.723388934905775*^9},ExpressionUUID->"38d9c76d-4add-4498-bdce-\
d239cda4804c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"BlankSequence", "[", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.68463390145035*^9},ExpressionUUID->"99057ad6-2568-412c-8dd4-521121217f48"]
}, Open  ]],

Cell["Since we have arguments this matches:", "Text",
 CellChangeTimes->{{3.7409729504656687`*^9, 
  3.740972955228148*^9}},ExpressionUUID->"9b1e5dd3-361d-4f35-9b55-\
e5beed453745"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"a", "[", "__", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684633987730358*^9, 3.684634021459434*^9}, 
   3.723388934936894*^9, 
   3.740972943714283*^9},ExpressionUUID->"f1fa125b-94ec-48d6-8744-\
d4f73a77f7ef"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684634021877087*^9},ExpressionUUID->"1a1a1516-5af9-4283-ae27-\
d5118778821f"]
}, Open  ]],

Cell["But this does not:", "Text",
 CellChangeTimes->{{3.7409729572502317`*^9, 
  3.7409729593079023`*^9}},ExpressionUUID->"ddde7858-707c-418b-8956-\
a01abadc0a42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", "]"}], ",", " ", 
   RowBox[{"a", "[", "__", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684633987730358*^9, 3.684634029971327*^9}, 
   3.7233889349663982`*^9, 
   3.74097294712985*^9},ExpressionUUID->"27c45533-d107-4c76-9211-\
4e1e3aeaf063"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.684634030318103*^9},ExpressionUUID->"56727500-4fe4-4cb4-907c-\
0a0768098ffc"]
}, Open  ]],

Cell["or 0 or more elements via a triple underscore:", "Text",
 CellChangeTimes->{{3.684633902966196*^9, 
  3.68463391575994*^9}},ExpressionUUID->"017c695b-c92b-459c-9794-\
ea4cf8afafca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"___", "//", "FullForm"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684633917201475*^9, 3.6846339196161203`*^9}, {
   3.7233486967511063`*^9, 3.723348696755322*^9}, 
   3.723388934990478*^9},ExpressionUUID->"089ec3f3-03f8-4c64-a074-\
5813da9dda6e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"BlankNullSequence", "[", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.68463392028046*^9},ExpressionUUID->"ea9c8c6b-2211-4459-aed0-f5c38c859c70"]
}, Open  ]],

Cell[TextData[{
 "This will match since all of these arguments have head ",
 Cell[BoxData["Integer"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "e89b9374-7c79-45fb-8838-d0f8e8af07e4"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7409729665129967`*^9, 
  3.74097298185*^9}},ExpressionUUID->"70a00e5b-b785-48ca-be8c-28f4cc60c130"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", " ", 
   RowBox[{"a", "[", "___Integer", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684633987730358*^9, 3.684634056722558*^9}, 
   3.723388935018466*^9, 
   3.740972963722321*^9},ExpressionUUID->"a259da75-cf48-4f3d-8c66-\
8411f6227171"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.684634021877087*^9, 
  3.684634057083028*^9}},ExpressionUUID->"17574aaf-2725-4993-b3ed-\
4714616b7bc0"]
}, Open  ]],

Cell["And this will match since there aren\[CloseCurlyQuote]t any arguments \
anyway:", "Text",
 CellChangeTimes->{{3.74097298399303*^9, 
  3.7409729925157557`*^9}},ExpressionUUID->"db180215-479a-4a4c-9f46-\
5173d4a54b8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", "]"}], ",", 
   RowBox[{"a", "[", "___", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.684633987730358*^9, 3.684634042068213*^9}, 
   3.723388935040359*^9},ExpressionUUID->"ee8040dd-9b25-4025-b0d2-\
2c647959acee"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.684634030318103*^9, 
  3.68463404628375*^9}},ExpressionUUID->"410f8bfc-d1dd-4f52-a228-\
ea186a47e053"]
}, Open  ]],

Cell["\<\
Everything that applies to single element patterns applies as well to these \
multi-element patterns.\
\>", "Text",
 CellChangeTimes->{{3.684634062161676*^9, 3.684634096704919*^9}, {
   3.6846343272174597`*^9, 3.684634328173489*^9}, 
   3.684634581760028*^9},ExpressionUUID->"f4dceed0-4b97-4f13-a27a-\
31e13b5cbf5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex Patterns", "Subsubsection",ExpressionUUID->"d492ecf5-2efd-4e20-bf59-49198cfa0208"],

Cell[TextData[{
 "Often it\[CloseCurlyQuote]s useful to be able to match more than one type. \
For this, there\[CloseCurlyQuote]s a built-in head ",
 Cell[BoxData[
  FormBox["Alternatives", TextInlineCell]], "InlineInput",ExpressionUUID->
  "0b87653e-ad26-420a-b076-d1c38c783c23"],
 ", which is represented by a vertical bar ",
 Cell[BoxData[
  FormBox["|", TextInlineCell]], "InlineInput",ExpressionUUID->
  "fb4bb899-767c-4147-9b88-b64413d5aa05"]
}], "Text",
 CellChangeTimes->{{3.684634363556428*^9, 
  3.68463440997162*^9}},ExpressionUUID->"208502f5-c7df-4d42-b722-\
262b9da369c2"],

Cell[TextData[{
 "An ",
 Cell[BoxData["Integer"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "cb1427d9-424e-4d0f-a53b-46bacca81d7a"],
 " matches this pattern:"
}], "Text",
 CellChangeTimes->{{3.74097300488879*^9, 
  3.74097301500353*^9}},ExpressionUUID->"9a89ccaf-db07-4127-9985-\
de997fd30627"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"10", ",", " ", 
   RowBox[{"_Integer", "|", "_String"}]}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684634421565077*^9, 3.684634439435093*^9}, {
   3.723348696757949*^9, 3.723348696762211*^9}, 3.7233889350726624`*^9, {
   3.740973000241185*^9, 
   3.740973008439023*^9}},ExpressionUUID->"08a26907-77ce-4132-9139-\
b0fb341c2bd7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.684634440895341*^9},ExpressionUUID->"2ada2f2c-cd37-4aca-965d-\
727324c73ff1"]
}, Open  ]],

Cell[TextData[{
 "As does a ",
 Cell[BoxData["String"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "f17a473e-26e6-42e4-800e-dcfe95e4acb8"],
 ":"
}], "Text",
 CellChangeTimes->{{3.74097300488879*^9, 
  3.7409730229764977`*^9}},ExpressionUUID->"6ed8253d-2403-4a3d-885c-\
ac06a3920718"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"\"\<10\>\"", ",", " ", 
   RowBox[{"_Integer", "|", "_String"}]}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684634421565077*^9, 3.6846344456746073`*^9}, {
   3.7233486967643127`*^9, 3.72334869676851*^9}, 3.723388935101121*^9, 
   3.740973001624919*^9},ExpressionUUID->"06fdc7e0-72f1-479a-8b9e-\
eb5446e23bcd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6846344460611677`*^9},ExpressionUUID->"cc135d20-cbc7-4e2c-a258-\
6bfd924f09f7"]
}, Open  ]],

Cell[TextData[{
 "But a ",
 Cell[BoxData["Symbol"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "554b9279-214d-453f-96db-cb6ec7ed4a21"],
 " does not:"
}], "Text",
 CellChangeTimes->{{3.740973025065805*^9, 
  3.740973029178653*^9}},ExpressionUUID->"74c6f456-2c35-471c-9644-\
82c0d9fa4fb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"\[Pi]", ",", " ", 
   RowBox[{"_Integer", "|", "_String"}]}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684634421565077*^9, 3.6846344521149597`*^9}, {
   3.723348696770763*^9, 3.723348696775365*^9}, 3.723388935122246*^9, 
   3.740973030380271*^9},ExpressionUUID->"5cba24ae-8cbb-4360-b76b-\
954be5a1f849"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.6846344460611677`*^9, 
  3.6846344525880537`*^9}},ExpressionUUID->"2c5596c4-3576-4f03-8b21-\
8a0982711e5a"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["Alternatives", TextInlineCell]], "InlineInput",ExpressionUUID->
  "41267fae-3580-4d4b-abf0-f960d236ddbc"],
 " can be used with any pattern and simplifies life tremendously in \
describing complicated structures concisely"
}], "Text",
 CellChangeTimes->{{3.684634466697151*^9, 3.684634528093954*^9}, {
  3.6846346201783333`*^9, 
  3.684634623798622*^9}},ExpressionUUID->"c189ea1c-b267-490a-9302-\
13c8cafe6886"],

Cell[TextData[{
 "One issue, however, is that a set of alternatives can\[CloseCurlyQuote]t be \
matched multiple times with the double or triple underscores. To fix this \
issue there is ",
 Cell[BoxData[
  FormBox["Repeated", TextInlineCell]], "InlineInput",ExpressionUUID->
  "e4ae23d4-3937-4125-bc82-ec7cd7ef0744"],
 "(",
 Cell[BoxData[
  FormBox["..", TextInlineCell]], "InlineInput",ExpressionUUID->
  "8e24f9b9-327c-4a7f-af3b-21afead9a350"],
 ") and ",
 Cell[BoxData[
  FormBox["RepeatedNull", TextInlineCell]], "InlineInput",ExpressionUUID->
  "f9904094-1217-4e4d-a91b-02b5733dac87"],
 " (",
 Cell[BoxData[
  FormBox["...", TextInlineCell]], "InlineInput",ExpressionUUID->
  "20f4f230-3ca6-4b83-a42c-2cbe08241c30"],
 ") which have the same meanings as ",
 Cell[BoxData[
  FormBox["__", TextInlineCell]], "InlineInput",ExpressionUUID->
  "c6a7a3f5-e23b-4f44-8e37-ae9b4bd0bae7"],
 " and ",
 Cell[BoxData[
  FormBox["___", TextInlineCell]], "InlineInput",ExpressionUUID->
  "e2302adc-6eae-4c20-948f-e9602bb5c0a2"],
 " respectively."
}], "Text",
 CellChangeTimes->{{3.684634629493187*^9, 3.6846347577017612`*^9}, {
  3.740940696784802*^9, 
  3.740940700422145*^9}},ExpressionUUID->"d2e71d07-5a0a-4505-9e04-\
7bfb667be5e6"],

Cell["Here\[CloseCurlyQuote]s an example of matching a complex structure:", \
"Text",
 CellChangeTimes->{{3.684634768152629*^9, 3.6846347814724817`*^9}, {
  3.740941019497346*^9, 
  3.740941019774652*^9}},ExpressionUUID->"0ee8873b-38b4-41d1-ac4c-\
72b266a661a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{"A", ",", "B", ",", "C"}], "}"}], "]"}], "@", 
    RowBox[{"(", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomInteger", "[", "]"}], "==", "0"}], ",", 
           RowBox[{"ToString", "@", "#"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"10", ",", 
          RowBox[{"RandomInteger", "[", "10", "]"}]}], "]"}]}], "\n", "\t", 
       ")"}]}], ")"}]}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "|", "B", "|", "C"}], ")"}], "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"_String", "|", "_Integer"}], ")"}], "..."}], "]"}]}], "\n", 
  "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684634763322712*^9, 3.684634830479249*^9}, {
   3.684634864091757*^9, 3.684635067591031*^9}, {3.6846350978702993`*^9, 
   3.684635119045292*^9}, {3.684635160188789*^9, 3.6846351756604033`*^9}, {
   3.684635221970578*^9, 3.684635225946919*^9}, {3.6846352561142263`*^9, 
   3.684635277037362*^9}, {3.68463532272348*^9, 3.684635323436082*^9}, {
   3.723348696777627*^9, 3.723348696781897*^9}, 
   3.723388935161304*^9},ExpressionUUID->"d19f073c-bef9-43e0-bd0f-\
dc89b811985b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6846350681453123`*^9, 3.6846351204162188`*^9}, {
  3.684635251663767*^9, 3.6846352827979813`*^9}, {3.684635328854699*^9, 
  3.684635330997142*^9}},ExpressionUUID->"56eee0fe-7f75-4424-a93f-\
e8cf6cb691f2"]
}, Open  ]],

Cell["\<\
It is impossible to know ahead of time what the head will be or how many \
arguments there will be or whether they\[CloseCurlyQuote]ll be strings or \
integers, but that doesn\[CloseCurlyQuote]t matter. We can still represent \
this pattern in under one line. Yet the pattern is robust enough that by \
doing something like appending in a symbol, our pattern catches that:\
\>", "Text",
 CellChangeTimes->{{3.6846351082945642`*^9, 3.684635219226755*^9}, {
  3.684635286572474*^9, 
  3.684635362130763*^9}},ExpressionUUID->"e48d591c-b149-4831-bbb0-\
9355a73c550c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Append", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomChoice", "[", 
       RowBox[{"{", 
        RowBox[{"A", ",", "B", ",", "C"}], "}"}], "]"}], "@", 
      RowBox[{"(", "\n", "\t", "\t\t", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"(", "\n", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomInteger", "[", "]"}], "==", "0"}], ",", 
             RowBox[{"ToString", "@", "#"}], ",", "#"}], "]"}], "&"}], "/@", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"10", ",", 
            RowBox[{"RandomInteger", "[", "10", "]"}]}], "]"}]}], "\n", "\t", 
         "\t\t\t", ")"}]}], "\n", "\t", "\t\t", ")"}]}], ",", "\n", "\t", 
     "\t", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"A", ",", "B", ",", "C"}], "}"}], "]"}]}], "\n", "\t", "\t", 
    "]"}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "|", "B", "|", "C"}], ")"}], "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"_String", "|", "_Integer"}], ")"}], "..."}], "]"}]}], "\n", 
  "\t", "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.684634763322712*^9, 3.684634830479249*^9}, {
   3.684634864091757*^9, 3.684635067591031*^9}, {3.6846350978702993`*^9, 
   3.684635119045292*^9}, {3.684635160188789*^9, 3.6846351756604033`*^9}, {
   3.684635221970578*^9, 3.684635225946919*^9}, {3.6846352561142263`*^9, 
   3.684635277037362*^9}, {3.68463532272348*^9, 3.684635354116353*^9}, {
   3.723348696784255*^9, 3.723348696788529*^9}, 3.723388935185364*^9, {
   3.740973040137339*^9, 
   3.740973059338686*^9}},ExpressionUUID->"63139f54-3248-4237-9eb3-\
b2c7a1caa543"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.684635354698069*^9, 
  3.684635355919588*^9}},ExpressionUUID->"22239ef3-2720-44b2-9f63-\
4d4a858bde21"]
}, Open  ]],

Cell[TextData[{
 "There is one further useful addition to this current redux on patterns. \
Sometime you know you\[CloseCurlyQuote]ll, say, see pairs of a patterns, and \
so a simple ",
 Cell[BoxData[
  FormBox["..", TextInlineCell]], "InlineInput",ExpressionUUID->
  "8c7feda5-4752-4c2b-ac5f-f3cf2222eac1"],
 " or ",
 Cell[BoxData[
  FormBox["__", TextInlineCell]], "InlineInput",ExpressionUUID->
  "a1da42ff-e7d6-40bb-9a99-e2c8e8e43a81"],
 " isn\[CloseCurlyQuote]t precise enough. For this case there is the head ",
 Cell[BoxData[
  FormBox["PatternSequence", TextInlineCell]], "InlineInput",ExpressionUUID->
  "7397384f-a0a3-4b8b-8c83-23ef4c7ed20c"],
 " which can capture this:"
}], "Text",
 CellChangeTimes->{{3.6846353864366703`*^9, 
  3.6846355115736837`*^9}},ExpressionUUID->"ac0abb6b-b58a-4df3-81fc-\
bbc4c8ec34ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"A", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "@", "#"}], ",", 
         RowBox[{"ToString", "@", "#"}], ",", "#"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", "10", "]"}]}], ")"}]}], ",", "\n", "\t", 
   RowBox[{"A", "[", 
    RowBox[{
     RowBox[{"PatternSequence", "[", 
      RowBox[{"_String", ",", "_Integer"}], "]"}], ".."}], "]"}]}], "\n", 
  "\t", "]"}]], "Code",
 CellChangeTimes->{{3.684635521974393*^9, 3.6846356638840837`*^9}, 
   3.723388935209261*^9, {3.740973064675331*^9, 
   3.7409730647300787`*^9}},ExpressionUUID->"786732c5-9761-4efc-acdb-\
155f2fd60459"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6846355659565897`*^9, 3.684635571240262*^9}, {
  3.684635605101548*^9, 3.684635619845798*^9}, {3.684635664658875*^9, 
  3.684635665825585*^9}},ExpressionUUID->"29b00869-83f8-4ff8-9488-\
188403aa2473"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Except", "Subsubsection",ExpressionUUID->"112b61fd-1025-4e91-882e-f73ee55e6333"],

Cell[TextData[{
 "The final piece of patterns is the head ",
 Cell[BoxData[
  FormBox["Except", TextInlineCell]], "InlineInput",ExpressionUUID->
  "d9646007-40c6-48b3-94cc-7d88326ad5d4"],
 ". It specifies that anything ",
 Cell[BoxData[
  FormBox["Except", TextInlineCell]], "InlineInput",ExpressionUUID->
  "231c6a6e-8cd4-458c-8fba-846e1e1c4701"],
 " the pattern inside should match. It is a negation pattern, in essence."
}], "Text",
 CellChangeTimes->{{3.6846362545092583`*^9, 
  3.684636305036916*^9}},ExpressionUUID->"3bc6cc51-23af-441a-be17-\
f5ea46a37b83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Except", "[", "_String", "]"}]}], "]"}]], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.6846363023588448`*^9, 3.684636313949201*^9}, {
   3.723348696791038*^9, 3.723348696795225*^9}, 
   3.723388935234767*^9},ExpressionUUID->"a4f28737-ad26-4289-9247-\
fd07acce41ee"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.68463631441383*^9},ExpressionUUID->"36057bd8-4598-4952-b66d-19f92eec55db"]
}, Open  ]],

Cell["These examples show a basic usage:", "Text",
 CellChangeTimes->{{3.740973102330523*^9, 
  3.740973109649612*^9}},ExpressionUUID->"bd91d4ad-171b-4168-88cd-\
becc9b5ce084"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{"a", "->", "b"}], "|>"}], ",", " ", 
   RowBox[{"Except", "[", "_String", "]"}]}], "]"}], "\n", 
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"Graphics", "@", 
    RowBox[{"Disk", "[", "]"}]}], ",", " ", 
   RowBox[{"Except", "[", "_String", "]"}]}], "]"}], "\n", 
 RowBox[{"MatchQ", "[", 
  RowBox[{"\"\<asdasd\>\"", ",", " ", 
   RowBox[{"Except", "[", "_String", "]"}]}], "]"}]}], "Code",
 GeneratedCell->False,
 CellChangeTimes->{{3.6846363023588448`*^9, 3.68463632110096*^9}, {
   3.7233486967973833`*^9, 3.72334869680163*^9}, 3.7233889352574387`*^9, {
   3.7409730713918447`*^9, 3.74097309456577*^9}},
 CellLabel->
  "In[1168]:=",ExpressionUUID->"c6628a25-818d-4001-85e4-7090e83c52bf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.684636321663979*^9, 3.740973095082292*^9},
 CellLabel->
  "Out[1168]=",ExpressionUUID->"96902c35-41af-4883-af5f-bd82342f57e0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.684636321663979*^9, 3.740973095096231*^9},
 CellLabel->
  "Out[1169]=",ExpressionUUID->"1128a38c-ed18-471a-a445-0274a19e8024"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.684636321663979*^9, 3.740973095112009*^9},
 CellLabel->
  "Out[1170]=",ExpressionUUID->"4247bff8-6213-4476-917a-9a3c2244fa63"]
}, Open  ]],

Cell[TextData[{
 "One interesting case is the two argument form of ",
 Cell[BoxData["Except"], "InlineInput",
  FormatType->"StandardForm",ExpressionUUID->
  "93312385-8c0e-4728-80dd-b5d4ec3fdf39"],
 ", where the second argument is a pattern that ",
 StyleBox["should",
  FontSlant->"Italic"],
 " match and the first argument is a list of exceptions to that pattern."
}], "Text",
 CellChangeTimes->{{3.740973111127027*^9, 
  3.740973146905409*^9}},ExpressionUUID->"98b11588-316b-476d-8418-\
ce2a300359a5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{101, Automatic}, {Automatic, 45}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "MarkdownNotebook.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2437, 51, 303, "Metadata",ExpressionUUID->"193e9afe-58b0-4309-9e29-8bb496c1c725"],
Cell[CellGroupData[{
Cell[3020, 75, 253, 4, 41, "Subsection",ExpressionUUID->"2608ca79-b897-43eb-a16a-81676a0d3b0f"],
Cell[CellGroupData[{
Cell[3298, 83, 95, 0, 40, "Subsubsection",ExpressionUUID->"8e94d53d-fa48-4f13-b2df-fb728037d0b3"],
Cell[3396, 85, 294, 7, 35, "Text",ExpressionUUID->"0f302fac-110a-4f96-b99b-43ccce8e1d9f"],
Cell[3693, 94, 359, 7, 35, "Text",ExpressionUUID->"efbea579-4ee6-4d10-bfc8-fe1c6d1faa93"],
Cell[4055, 103, 294, 7, 35, "Text",ExpressionUUID->"d7eed2cf-a7ae-4377-a473-74b796b9b4e2"],
Cell[CellGroupData[{
Cell[4374, 114, 390, 7, 52, "Code",ExpressionUUID->"82c5742c-6951-4c19-a30c-7cd8de09e353"],
Cell[4767, 123, 279, 10, 34, "Output",ExpressionUUID->"dca33cab-ec18-4c6b-bc8b-af10fcb8fc93"]
}, Open  ]],
Cell[5061, 136, 275, 6, 35, "Text",ExpressionUUID->"96334208-0803-4c1a-abf2-c04776596c78"],
Cell[CellGroupData[{
Cell[5361, 146, 208, 4, 52, "Code",ExpressionUUID->"a8e0cdbd-dc76-4e41-9a81-ccc29567b168"],
Cell[5572, 152, 341, 12, 34, "Output",ExpressionUUID->"074d53fc-4a6f-4ea2-abce-66a5e1148961"]
}, Open  ]],
Cell[5928, 167, 984, 23, 81, "Text",ExpressionUUID->"fdfb0aac-e4cd-428a-846d-bb37448a5269"],
Cell[6915, 192, 235, 6, 35, "Text",ExpressionUUID->"93e0e404-833a-4400-8ada-1842f586a1cc"],
Cell[CellGroupData[{
Cell[7175, 202, 407, 8, 52, "Code",ExpressionUUID->"45b8b2d5-f8d1-4ddc-81f4-376020734705"],
Cell[7585, 212, 133, 3, 34, "Output",ExpressionUUID->"58f24fd6-535f-484f-b52d-2dd0ebc4652d"]
}, Open  ]],
Cell[7733, 218, 178, 3, 35, "Text",ExpressionUUID->"3fa9c12b-c781-4b2c-9015-5eee65718f1f"],
Cell[CellGroupData[{
Cell[7936, 225, 304, 7, 52, "Code",ExpressionUUID->"862ec84b-4a21-415c-be7f-7b140a5ad8fa"],
Cell[8243, 234, 135, 3, 34, "Output",ExpressionUUID->"593fd069-e835-466e-ad23-f45aec88a750"]
}, Open  ]],
Cell[8393, 240, 216, 5, 35, "Text",ExpressionUUID->"28921913-c22c-4a7b-aa84-bb12e75dc3e0"],
Cell[CellGroupData[{
Cell[8634, 249, 332, 7, 52, "Code",ExpressionUUID->"1492a0e0-97de-47a8-8edf-8e07e12443b7"],
Cell[8969, 258, 159, 3, 34, "Output",ExpressionUUID->"7708a3d0-96ef-45dd-a656-53e48f6ffb22"]
}, Open  ]],
Cell[9143, 264, 459, 10, 35, "Text",ExpressionUUID->"53aaa60c-b655-42cd-804a-a070be89126f"],
Cell[CellGroupData[{
Cell[9627, 278, 210, 4, 52, "Code",ExpressionUUID->"11e35b54-84fa-47ed-88bc-26f1cf00975b"],
Cell[9840, 284, 310, 10, 34, "Output",ExpressionUUID->"6f3f8f25-811e-477f-9da4-39708c079cdc"]
}, Open  ]],
Cell[10165, 297, 602, 14, 35, "Text",ExpressionUUID->"fc634065-630a-4972-8094-b5637c849a57"],
Cell[CellGroupData[{
Cell[10792, 315, 290, 7, 52, "Code",ExpressionUUID->"9d493f99-9774-441b-9488-f1451f371434"],
Cell[11085, 324, 133, 3, 34, "Output",ExpressionUUID->"aa5dad3d-de57-4a8b-bd94-87f84b67ff1f"]
}, Open  ]],
Cell[11233, 330, 158, 3, 35, "Text",ExpressionUUID->"9c18d4c2-eca5-4025-87e8-6224bd965a3f"],
Cell[CellGroupData[{
Cell[11416, 337, 378, 9, 52, "Code",ExpressionUUID->"c4f1b517-b561-418e-99ae-ea41987532cc"],
Cell[11797, 348, 133, 3, 34, "Output",ExpressionUUID->"2384b9a1-2c1f-4990-aaeb-c9c161612752"]
}, Open  ]],
Cell[11945, 354, 169, 3, 35, "Text",ExpressionUUID->"00280b34-12d1-4f12-ae38-3b6a489ce840"],
Cell[CellGroupData[{
Cell[12139, 361, 498, 13, 52, "Code",ExpressionUUID->"55290193-7847-4ed6-994f-582e0c329323"],
Cell[12640, 376, 133, 3, 34, "Output",ExpressionUUID->"8eebb3fa-79bf-46e2-abc8-86a32cec33d8"]
}, Open  ]],
Cell[12788, 382, 183, 3, 35, "Text",ExpressionUUID->"cbedbc2d-2e9b-4c83-89b5-21c1b46268a2"],
Cell[CellGroupData[{
Cell[12996, 389, 268, 6, 52, "Code",ExpressionUUID->"b69209b6-1b2f-4b86-ac6d-f1d13387bec5"],
Cell[13267, 397, 158, 3, 34, "Output",ExpressionUUID->"5e53e4c3-bef5-4f9d-8f4b-f4e47a374edf"]
}, Open  ]],
Cell[13440, 403, 341, 7, 58, "Text",ExpressionUUID->"a787b50c-afa6-4427-9a3f-371d910869a5"],
Cell[CellGroupData[{
Cell[13806, 414, 282, 6, 52, "Code",ExpressionUUID->"9b08db87-9f1e-4bec-b045-ef5f0871b552"],
Cell[14091, 422, 378, 12, 34, "Output",ExpressionUUID->"dd56f035-4632-4648-aea1-e9801de0e60d"]
}, Open  ]],
Cell[14484, 437, 179, 3, 35, "Text",ExpressionUUID->"15b83bd1-0bce-49ca-bb02-89ecd6435bbf"],
Cell[CellGroupData[{
Cell[14688, 444, 430, 13, 52, "Code",ExpressionUUID->"1f269a38-6a72-45d6-92af-391e5dd46bc1"],
Cell[15121, 459, 156, 3, 34, "Output",ExpressionUUID->"8207d92c-9a5b-4c58-84ba-14e9efe075fd"]
}, Open  ]],
Cell[15292, 465, 268, 6, 35, "Text",ExpressionUUID->"7aa1146a-7d11-46c6-9983-35fc5e87d54c"],
Cell[CellGroupData[{
Cell[15585, 475, 442, 13, 52, "Code",ExpressionUUID->"8210657f-e35b-47ff-bc36-87c4ed49be52"],
Cell[16030, 490, 158, 3, 34, "Output",ExpressionUUID->"c2c938cf-25bf-4ae0-9614-7ef4e26ed6c8"]
}, Open  ]],
Cell[16203, 496, 286, 6, 35, "Text",ExpressionUUID->"4c914bf8-ef62-4887-8035-705b6c7a803a"],
Cell[CellGroupData[{
Cell[16514, 506, 550, 17, 52, "Code",ExpressionUUID->"959be473-3cc8-43bc-a566-9c6c534ee005"],
Cell[17067, 525, 158, 3, 34, "Output",ExpressionUUID->"e17cac41-8c91-4097-89bb-dcc3dd228450"]
}, Open  ]],
Cell[17240, 531, 199, 3, 35, "Text",ExpressionUUID->"de8b5f28-ab40-4365-a230-c2c1499da8f3"],
Cell[CellGroupData[{
Cell[17464, 538, 358, 9, 52, "Code",ExpressionUUID->"099965f6-7869-45c9-ba38-2cf52d5f6a8a"],
Cell[17825, 549, 133, 3, 34, "Output",ExpressionUUID->"8c9a5112-7c2d-43df-8bc1-3fa286d431da"]
}, Open  ]],
Cell[17973, 555, 239, 6, 35, "Text",ExpressionUUID->"44ba5b47-199b-4fb0-bc89-75eba78f532c"],
Cell[CellGroupData[{
Cell[18237, 565, 279, 6, 52, "Code",ExpressionUUID->"38d9c76d-4add-4498-bdce-d239cda4804c"],
Cell[18519, 573, 284, 9, 34, "Output",ExpressionUUID->"99057ad6-2568-412c-8dd4-521121217f48"]
}, Open  ]],
Cell[18818, 585, 181, 3, 35, "Text",ExpressionUUID->"9b1e5dd3-361d-4f35-9b55-e5beed453745"],
Cell[CellGroupData[{
Cell[19024, 592, 355, 9, 52, "Code",ExpressionUUID->"f1fa125b-94ec-48d6-8744-d4f73a77f7ef"],
Cell[19382, 603, 133, 3, 34, "Output",ExpressionUUID->"1a1a1516-5af9-4283-ae27-d5118778821f"]
}, Open  ]],
Cell[19530, 609, 164, 3, 35, "Text",ExpressionUUID->"ddde7858-707c-418b-8956-a01abadc0a42"],
Cell[CellGroupData[{
Cell[19719, 616, 316, 8, 52, "Code",ExpressionUUID->"27c45533-d107-4c76-9211-4e1e3aeaf063"],
Cell[20038, 626, 134, 3, 34, "Output",ExpressionUUID->"56727500-4fe4-4cb4-907c-0a0768098ffc"]
}, Open  ]],
Cell[20187, 632, 187, 3, 35, "Text",ExpressionUUID->"017c695b-c92b-459c-9794-ea4cf8afafca"],
Cell[CellGroupData[{
Cell[20399, 639, 284, 6, 52, "Code",ExpressionUUID->"089ec3f3-03f8-4c64-a074-5813da9dda6e"],
Cell[20686, 647, 288, 9, 34, "Output",ExpressionUUID->"ea9c8c6b-2211-4459-aed0-f5c38c859c70"]
}, Open  ]],
Cell[20989, 659, 344, 8, 35, "Text",ExpressionUUID->"70a00e5b-b785-48ca-be8c-28f4cc60c130"],
Cell[CellGroupData[{
Cell[21358, 671, 363, 9, 52, "Code",ExpressionUUID->"a259da75-cf48-4f3d-8c66-8411f6227171"],
Cell[21724, 682, 157, 3, 34, "Output",ExpressionUUID->"17574aaf-2725-4993-b3ed-4714616b7bc0"]
}, Open  ]],
Cell[21896, 688, 222, 4, 35, "Text",ExpressionUUID->"db180215-479a-4a4c-9f46-5173d4a54b8a"],
Cell[CellGroupData[{
Cell[22143, 696, 285, 7, 52, "Code",ExpressionUUID->"ee8040dd-9b25-4025-b0d2-2c647959acee"],
Cell[22431, 705, 156, 3, 34, "Output",ExpressionUUID->"410f8bfc-d1dd-4f52-a228-ea186a47e053"]
}, Open  ]],
Cell[22602, 711, 326, 7, 35, "Text",ExpressionUUID->"f4dceed0-4b97-4f13-a27a-31e13b5cbf5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22965, 723, 96, 0, 40, "Subsubsection",ExpressionUUID->"d492ecf5-2efd-4e20-bf59-49198cfa0208"],
Cell[23064, 725, 585, 13, 58, "Text",ExpressionUUID->"208502f5-c7df-4d42-b722-262b9da369c2"],
Cell[23652, 740, 315, 9, 35, "Text",ExpressionUUID->"9a89ccaf-db07-4127-9985-de997fd30627"],
Cell[CellGroupData[{
Cell[23992, 753, 398, 9, 53, "Code",ExpressionUUID->"08a26907-77ce-4132-9139-b0fb341c2bd7"],
Cell[24393, 764, 133, 3, 34, "Output",ExpressionUUID->"2ada2f2c-cd37-4aca-965d-727324c73ff1"]
}, Open  ]],
Cell[24541, 770, 303, 9, 35, "Text",ExpressionUUID->"6ed8253d-2403-4a3d-885c-ac06a3920718"],
Cell[CellGroupData[{
Cell[24869, 783, 379, 8, 53, "Code",ExpressionUUID->"06fdc7e0-72f1-479a-8b9e-eb5446e23bcd"],
Cell[25251, 793, 135, 3, 34, "Output",ExpressionUUID->"cc135d20-cbc7-4e2c-a258-6bfd924f09f7"]
}, Open  ]],
Cell[25401, 799, 307, 9, 35, "Text",ExpressionUUID->"74c6f456-2c35-471c-9644-82c0d9fa4fb1"],
Cell[CellGroupData[{
Cell[25733, 812, 373, 8, 53, "Code",ExpressionUUID->"5cba24ae-8cbb-4360-b76b-954be5a1f849"],
Cell[26109, 822, 162, 3, 34, "Output",ExpressionUUID->"2c5596c4-3576-4f03-8b21-8a0982711e5a"]
}, Open  ]],
Cell[26286, 828, 452, 10, 58, "Text",ExpressionUUID->"c189ea1c-b267-490a-9302-13c8cafe6886"],
Cell[26741, 840, 1225, 32, 81, "Text",ExpressionUUID->"d2e71d07-5a0a-4505-9e04-7bfb667be5e6"],
Cell[27969, 874, 262, 5, 35, "Text",ExpressionUUID->"0ee8873b-38b4-41d1-ac4c-72b266a661a9"],
Cell[CellGroupData[{
Cell[28256, 883, 1418, 36, 130, "Code",ExpressionUUID->"d19f073c-bef9-43e0-bd0f-dc89b811985b"],
Cell[29677, 921, 258, 4, 34, "Output",ExpressionUUID->"56eee0fe-7f75-4424-a93f-e8cf6cb691f2"]
}, Open  ]],
Cell[29950, 928, 573, 10, 81, "Text",ExpressionUUID->"e48d591c-b149-4831-bbb0-9355a73c550c"],
Cell[CellGroupData[{
Cell[30548, 942, 1809, 44, 244, "Code",ExpressionUUID->"63139f54-3248-4237-9eb3-b2c7a1caa543"],
Cell[32360, 988, 158, 3, 34, "Output",ExpressionUUID->"22239ef3-2720-44b2-9f63-4d4a858bde21"]
}, Open  ]],
Cell[32533, 994, 823, 19, 81, "Text",ExpressionUUID->"ac0abb6b-b58a-4df3-81fc-bbc4c8ec34ad"],
Cell[CellGroupData[{
Cell[33381, 1017, 737, 20, 110, "Code",ExpressionUUID->"786732c5-9761-4efc-acdb-155f2fd60459"],
Cell[34121, 1039, 254, 4, 34, "Output",ExpressionUUID->"29b00869-83f8-4ff8-9488-188403aa2473"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34424, 1049, 86, 0, 40, "Subsubsection",ExpressionUUID->"112b61fd-1025-4e91-882e-f73ee55e6333"],
Cell[34513, 1051, 563, 13, 58, "Text",ExpressionUUID->"3bc6cc51-23af-441a-be17-f5ea46a37b83"],
Cell[CellGroupData[{
Cell[35101, 1068, 345, 8, 52, "Code",ExpressionUUID->"a4f28737-ad26-4289-9247-fd07acce41ee"],
Cell[35449, 1078, 130, 2, 34, "Output",ExpressionUUID->"36057bd8-4598-4952-b66d-19f92eec55db"]
}, Open  ]],
Cell[35594, 1083, 176, 3, 35, "Text",ExpressionUUID->"bd91d4ad-171b-4168-88cd-becc9b5ce084"],
Cell[CellGroupData[{
Cell[35795, 1090, 774, 19, 91, "Code",ExpressionUUID->"c6628a25-818d-4001-85e4-7090e83c52bf"],
Cell[36572, 1111, 179, 3, 34, "Output",ExpressionUUID->"96902c35-41af-4883-af5f-bd82342f57e0"],
Cell[36754, 1116, 179, 3, 34, "Output",ExpressionUUID->"1128a38c-ed18-471a-a445-0274a19e8024"],
Cell[36936, 1121, 180, 3, 34, "Output",ExpressionUUID->"4247bff8-6213-4476-917a-9a3c2244fa63"]
}, Open  ]],
Cell[37131, 1127, 505, 12, 58, "Text",ExpressionUUID->"98b11588-316b-476d-8418-ce2a300359a5"]
}, Open  ]]
}, Open  ]]
}
]
*)

