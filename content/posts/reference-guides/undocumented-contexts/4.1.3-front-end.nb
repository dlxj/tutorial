Notebook[{Cell[BoxData[RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{RowBox[{"\"Title\"", "\[Rule]", "\"FrontEnd\""}], ",", 
        "\[IndentingNewLine]", RowBox[{"\"Slug\"", "\[Rule]", "Automatic"}], 
        ",", "\[IndentingNewLine]", RowBox[{"\"Path\"", "\[Rule]", 
          "\"Reference Guides/Undocumented Contexts/\""}], ",", 
        "\[IndentingNewLine]", RowBox[{"\"ID\"", "\[Rule]", 
          RowBox[{"{", "\"4.1.2\"", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"Date\"", "\[Rule]", TemplateBox[
           {RowBox[{"\"Tue 17 Jul 2018 01:16:59\"", StyleBox[RowBox[
                {"\"GMT\"", "\[InvisibleSpace]", StyleBox[RowBox[
                   {"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
            RowBox[{"DateObject", "[", RowBox[{RowBox[{"{", RowBox[
                   {"2018", ",", "7", ",", "17", ",", "1", ",", "16", ",", 
                    "59.037302`8.523701475112768"}], "}"}], ",", 
                "\"Instant\"", ",", "\"Gregorian\"", ",", RowBox[
                 {"-", "7.`"}]}], "]"}]}, "DateObject", Editable -> False]}], 
        ",", "\[IndentingNewLine]", RowBox[{"\"Modified\"", "\[Rule]", 
          "Now"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"Authors\"", "\[Rule]", RowBox[{"{", "}"}]}], ",", 
        "\[IndentingNewLine]", RowBox[{"\"Categories\"", "\[Rule]", 
          RowBox[{"{", RowBox[{"\"reference-guides\"", ",", 
              "\"undocumented-contexts\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", RowBox[{"\"Tags\"", "\[Rule]", 
          RowBox[{"{", RowBox[{"\"undocumented\"", ",", " ", 
              "\"front-end\""}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"ExportOptions\"", "\[Rule]", 
          RowBox[{"{", RowBox[{"\"Save\"", "\[Rule]", "True"}], "}"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]], "Metadata", 
   CellChangeTimes -> {{3.7230674328716917*^9, 3.723067452190956*^9}, 
     {3.7230679580568*^9, 3.7230680128473673*^9}, {3.7232007087815647*^9, 
     3.7232007883818817*^9}, 3.723201146733818*^9, {3.723203002317672*^9, 
     3.723203008852455*^9}, {3.723203499603772*^9, 3.7232035545127563*^9}, 
     {3.723251256681574*^9, 3.723251262240631*^9}, {3.74077953306179*^9, 
     3.7407795404796257*^9}, {3.740804293761916*^9, 3.740804334443972*^9}, 
     {3.7408469808175697*^9, 3.740847013947701*^9}}], 
  Cell[CellGroupData[{Cell["Front End Programming", "Subsection", 
      CellChangeTimes -> {{3.74080434357171*^9, 3.74080434755488*^9}, 
       {3.74084699283862*^9, 3.7408469943008127*^9}, {3.7408471388010893*^9, 
       3.740847142514399*^9}}], Cell["The Mathematica front-end is almost as \
complex as the Mathematica kernel, but much worse understood. There are a \
number of contexts which implement different functionality that it uses.", 
      "Text", CellChangeTimes -> {{3.74084711103587*^9, 
       3.74084715667421*^9}}]}, Open]], 
  Cell[CellGroupData[{Cell["FrontEnd", "Subsection", 
      CellChangeTimes -> {{3.740847158297068*^9, 3.74084715920197*^9}}], 
     Cell[TextData[{"The ", Cell[BoxData["\"FrontEnd`\""], "InlineInput"], " \
context supplies things like \[OpenCurlyDoubleQuote]front-end \
packets\[CloseCurlyDoubleQuote] which tell the front-end to do things."}], 
      "Text", CellChangeTimes -> {{3.7408471605693274*^9, 
       3.7408471819372377*^9}}], 
     Cell[TextData[{"There is a decent listing of these with usages ", 
        ButtonBox["here", BaseStyle -> "Hyperlink", ButtonData -> 
          {URL["https://mathematica.stackexchange.com/a/133523/38205"], 
           None}, ButtonNote -> 
          "https://mathematica.stackexchange.com/a/133523/38205"], "."}], 
      "Text", CellChangeTimes -> {{3.740847186960864*^9, 
       3.740847190681787*^9}, {3.740847280667671*^9, 
       3.7408472918273783*^9}}]}, Open]], 
  Cell[CellGroupData[{Cell["FE", "Subsection", CellChangeTimes -> 
       {{3.740847294192707*^9, 3.740847294362612*^9}}], 
     Cell[TextData[{"The ", Cell[BoxData["\"FE`\""], "InlineInput"], 
        " context provides utilities used by the front-end"}], "Text", 
      CellChangeTimes -> {{3.74084729839233*^9, 3.740847313984651*^9}}], 
     Cell[CellGroupData[{Cell["makePlainText", "Subsubsection", 
         CellChangeTimes -> {{3.740847315688271*^9, 3.740847319785441*^9}}], 
        Cell[TextData[{Cell[BoxData["FE`makePlainText"], "InlineInput"], 
           " converts a front-end expression into plain text:"}], "Text", 
         CellChangeTimes -> {{3.764041161780257*^9, 3.764041181610238*^9}}], 
        Cell[CellGroupData[{Cell[BoxData[RowBox[{"FE`makePlainText", "[", 
               RowBox[{"NotebookRead", "[", RowBox[{"EvaluationCell", "[", 
                   "]"}], "]"}], "]"}]], "Code", CellChangeTimes -> 
             {{3.764041183035578*^9, 3.764041196314592*^9}}, 
            CellLabel -> "In[6]:="], Cell[BoxData[
             "\"In[6]:= FE`makePlainText[NotebookRead[EvaluationCell[]]]\""], 
            "Output", CellChangeTimes -> {3.7640411969375477*^9}, 
            CellLabel -> "Out[6]="]}, Open]], 
        Cell[TextData[{"It\[CloseCurlyQuote]s basically like ", 
           Cell[BoxData["FrontEndExecute"], "InlineInput"], " with ", 
           Cell[BoxData["ExportPacket"], "InlineInput"], " and ", 
           Cell[BoxData["\"PlainText\""], "InlineInput"], " as described ", 
           ButtonBox["here", BaseStyle -> "Hyperlink", ButtonData -> 
             {URL["https://mathematica.stackexchange.com/a/133523/38205"], 
              None}, ButtonNote -> 
             "https://mathematica.stackexchange.com/a/133523/38205"], "."}], 
         "Text", CellChangeTimes -> {{3.7640412069020443*^9, 
          3.764041232044365*^9}, {3.764041283632042*^9, 
          3.764041283643165*^9}}]}, Open]], 
     Cell[CellGroupData[{Cell["Evaluate", "Subsubsection", 
         CellChangeTimes -> {{3.74084732728034*^9, 3.740847328240711*^9}}], 
        Cell[TextData[{Cell[BoxData["FE`Evaluate"], "InlineInput"], " \
evaluates front-end expressions, basically. It\[CloseCurlyQuote]ll usually \
imitate what you see when working with these things in the actual front-end. \
E.g.:"}], "Text", CellChangeTimes -> {{3.764041287668825*^9, 
          3.7640413352103233*^9}}], Cell[CellGroupData[
          {Cell[BoxData[{RowBox[{RowBox[{"img", "=", "\n", "  ", 
                  RowBox[{"FE`Evaluate", "[", "\n", "    ", RowBox[{"(*", 
                      " ", RowBox[{"imports", " ", "an", " ", "Image", " ", 
                        "as", " ", "a", " ", "GraphicsBox"}], " ", "*)"}], 
                    "\n", "    ", RowBox[{"FEPrivate`ImportImage", "@", "\n", 
                      "      ", RowBox[{"FrontEnd`FileName", "[", RowBox[
                         {RowBox[{"{", RowBox[{"\"Ribbons\"", ",", " ", 
                          "\"Common\""}], "}"}], ",", " ", "\"Close.png\""}], 
                        "]"}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
              RowBox[{"img", " ", "//", " ", "ToExpression", " ", 
                RowBox[{"(*", " ", RowBox[{"creates", " ", "the", " ", 
                    "proper", " ", "image", " ", "from", " ", "the", " ", 
                    "GraphicsBox"}], " ", "*)"}], " "}]}], "Code", 
            CellChangeTimes -> {{3.764041342316523*^9, 3.764041376226013*^9}, 
             {3.7640414226581717*^9, 3.764041503472498*^9}}, 
            CellLabel -> "In[19]:="], Cell[BoxData[GraphicsBox[
              TagBox[RasterBox[RawArray["UnsignedInteger8", {{{0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 
                 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {255, 255, 255, 1}, 
                 {172, 172, 172, 62}, {171, 171, 171, 138}, {170, 170, 170, 
                 194}, {171, 171, 171, 231}, {170, 170, 170, 248}, {171, 171, 
                 171, 247}, {171, 171, 171, 231}, {170, 170, 170, 194}, {170, 
                 170, 170, 136}, {172, 172, 172, 62}, {255, 255, 255, 1}, {0, 
                 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 
                 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {127, 127, 127, 2}, {170, 170, 170, 100}, 
                 {171, 171, 171, 220}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 217}, {171, 171, 171, 95}, {127, 127, 127, 
                 2}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {172, 172, 172, 
                 40}, {170, 170, 170, 205}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {170, 170, 170, 200}, {172, 
                 172, 172, 37}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 
                 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 
                 0, 0}, {0, 0, 0, 0}, {171, 171, 171, 73}, {171, 171, 171, 
                 243}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 241}, {171, 171, 171, 70}, {0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {170, 170, 170, 78}, {171, 171, 171, 250}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 249}, {170, 
                 170, 170, 66}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
                 {{0, 0, 0, 0}, {0, 0, 0, 0}, {167, 167, 167, 41}, {170, 170, 
                 170, 245}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 240}, {167, 167, 
                 167, 38}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {191, 
                 191, 191, 4}, {171, 171, 171, 207}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 201}, 
                 {127, 127, 127, 2}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {171, 171, 
                 171, 104}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {173, 173, 173, 255}, {210, 210, 210, 
                 255}, {187, 187, 187, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {188, 188, 188, 255}, 
                 {211, 211, 211, 255}, {173, 173, 173, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {170, 
                 170, 170, 96}, {0, 0, 0, 0}}, {{127, 127, 127, 2}, {171, 
                 171, 171, 223}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {173, 173, 173, 255}, {211, 211, 211, 255}, {227, 227, 
                 227, 255}, {226, 226, 226, 255}, {187, 187, 187, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {188, 188, 188, 255}, {227, 227, 227, 
                 255}, {228, 228, 228, 255}, {212, 212, 212, 255}, {173, 173, 
                 173, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {170, 170, 170, 218}, {255, 255, 255, 1}}, {{172, 172, 172, 
                 68}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {211, 211, 211, 255}, {227, 227, 227, 255}, 
                 {227, 227, 227, 255}, {227, 227, 227, 255}, {226, 226, 226, 
                 255}, {187, 187, 187, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {188, 188, 188, 255}, {227, 227, 227, 255}, {228, 
                 228, 228, 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, 
                 {212, 212, 212, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {172, 172, 172, 62}}, 
                 {{171, 171, 171, 144}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {193, 193, 193, 255}, {227, 
                 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, 
                 {227, 227, 227, 255}, {226, 226, 226, 255}, {187, 187, 187, 
                 255}, {188, 188, 188, 255}, {227, 227, 227, 255}, {228, 228, 
                 228, 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, {228, 
                 228, 228, 255}, {193, 193, 193, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 137}}, {{171, 171, 171, 201}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {193, 193, 193, 255}, {227, 227, 227, 255}, {227, 
                 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, 
                 {226, 226, 226, 255}, {227, 227, 227, 255}, {228, 228, 228, 
                 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, {228, 228, 
                 228, 255}, {193, 193, 193, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {170, 170, 170, 193}}, {{171, 171, 171, 237}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {193, 193, 
                 193, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 
                 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, 
                 {228, 228, 228, 255}, {228, 228, 228, 255}, {228, 228, 228, 
                 255}, {193, 193, 193, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 232}}, {{171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {193, 193, 193, 255}, {227, 227, 
                 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 
                 227, 227, 255}, {227, 227, 227, 255}, {228, 228, 228, 255}, 
                 {193, 193, 193, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 249}}, 
                 {{171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {188, 188, 188, 255}, 
                 {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 
                 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, {226, 226, 
                 226, 255}, {187, 187, 187, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 249}}, {{171, 171, 171, 238}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {188, 188, 188, 255}, {227, 
                 227, 227, 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, 
                 {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 
                 255}, {227, 227, 227, 255}, {226, 226, 226, 255}, {187, 187, 
                 187, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 232}}, {{170, 170, 170, 202}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {188, 188, 188, 255}, {227, 227, 
                 227, 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, {228, 
                 228, 228, 255}, {228, 228, 228, 255}, {227, 227, 227, 255}, 
                 {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 
                 255}, {226, 226, 226, 255}, {187, 187, 187, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {170, 170, 170, 196}}, {{171, 171, 
                 171, 149}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {188, 188, 188, 255}, {227, 227, 227, 
                 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, {228, 228, 
                 228, 255}, {228, 228, 228, 255}, {193, 193, 193, 255}, {193, 
                 193, 193, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, 
                 {227, 227, 227, 255}, {227, 227, 227, 255}, {226, 226, 226, 
                 255}, {187, 187, 187, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {170, 170, 170, 139}}, 
                 {{172, 172, 172, 71}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {215, 215, 215, 255}, {228, 
                 228, 228, 255}, {228, 228, 228, 255}, {228, 228, 228, 255}, 
                 {228, 228, 228, 255}, {193, 193, 193, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {193, 193, 193, 255}, {227, 227, 
                 227, 255}, {227, 227, 227, 255}, {227, 227, 227, 255}, {227, 
                 227, 227, 255}, {215, 215, 215, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {172, 172, 
                 172, 65}}, {{170, 170, 170, 3}, {171, 171, 171, 226}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {175, 175, 175, 
                 255}, {217, 217, 217, 255}, {228, 228, 228, 255}, {228, 228, 
                 228, 255}, {193, 193, 193, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {193, 193, 193, 255}, {227, 227, 227, 255}, {227, 227, 227, 
                 255}, {216, 216, 216, 255}, {175, 175, 175, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 220}, 
                 {127, 127, 127, 2}}, {{0, 0, 0, 0}, {170, 170, 170, 109}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {175, 175, 175, 255}, {217, 217, 217, 255}, {193, 
                 193, 193, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {193, 193, 193, 255}, {216, 216, 
                 216, 255}, {175, 175, 175, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {170, 170, 170, 
                 102}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {153, 153, 153, 5}, 
                 {170, 170, 170, 212}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {172, 172, 172, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {172, 172, 
                 172, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 207}, {170, 170, 170, 
                 3}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {173, 173, 
                 173, 47}, {171, 171, 171, 246}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {170, 170, 
                 170, 245}, {167, 167, 167, 41}, {0, 0, 0, 0}, {0, 0, 0, 0}}, 
                 {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {170, 170, 170, 
                 87}, {171, 171, 171, 252}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {170, 170, 170, 251}, {170, 170, 170, 78}, {0, 0, 0, 0}, {0, 
                 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 
                 0, 0}, {0, 0, 0, 0}, {170, 170, 170, 81}, {171, 171, 171, 
                 247}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {170, 
                 170, 170, 245}, {170, 170, 170, 78}, {0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {170, 170, 
                 170, 48}, {170, 170, 170, 212}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {170, 170, 170, 209}, 
                 {173, 173, 173, 44}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {153, 153, 153, 5}, {171, 171, 171, 110}, {171, 171, 171, 
                 226}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 
                 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 
                 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 255}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 225}, {171, 171, 171, 104}, {191, 191, 191, 4}, {0, 0, 0, 
                 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 
                 0, 0, 0}, {170, 170, 170, 3}, {171, 171, 171, 73}, {171, 
                 171, 171, 147}, {171, 171, 171, 204}, {171, 171, 171, 240}, 
                 {171, 171, 171, 255}, {171, 171, 171, 255}, {171, 171, 171, 
                 240}, {170, 170, 170, 203}, {170, 170, 170, 145}, {171, 171, 
                 171, 70}, {170, 170, 170, 3}, {0, 0, 0, 0}, {0, 0, 0, 0}, 
                 {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 
                 0, 0, 0}, {0, 0, 0, 0}}}], {{0, 28}, {28, 0}}, {0, 255}, 
                ColorFunction -> RGBColor], BoxForm`ImageTag["Byte", 
                ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
                False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> {
                14., 14.}, ImageSizeRaw -> {28, 28}, PlotRange -> {{0, 28}, {
                0, 28}}]], "Output", CellChangeTimes -> 
             {3.7640414544486523*^9, 3.764041504771453*^9}, 
            CellLabel -> "Out[20]="]}, Open]], Cell["Compare to:", "Text", 
         CellChangeTimes -> {{3.764041508887331*^9, 3.764041526760644*^9}}], 
        Cell[CellGroupData[{Cell[BoxData[RowBox[{"RawBoxes", "@", RowBox[
                {"DynamicBox", "@", "\n", "  ", RowBox[
                  {"FEPrivate`ImportImage", "@", "\n", "      ", RowBox[
                    {"FrontEnd`FileName", "[", RowBox[{RowBox[{"{", RowBox[
                          {"\"Ribbons\"", ",", " ", "\"Common\""}], "}"}], 
                       ",", " ", "\"Close.png\""}], "]"}]}]}]}]], "Code", 
            CellChangeTimes -> {{3.7640415156176863*^9, 
             3.764041533335539*^9}}, CellLabel -> "In[22]:="], 
           Cell[BoxData[DynamicBox[FEPrivate`ImportImage[FrontEnd`FileName[
                {"Ribbons", "Common"}, "Close.png"]], ImageSizeCache -> {14., 
                {5., 9.}}]], "Output", CellChangeTimes -> 
             {3.7640415345204782*^9}, CellLabel -> "Out[22]="]}, Open]]}, 
       Open]]}, Open]], 
  Cell[CellGroupData[{Cell["FEPrivate", "Subsection", 
      CellChangeTimes -> {{3.740847324128356*^9, 3.7408473254091167*^9}}], 
     Cell[TextData[{"The ", Cell[BoxData["\"FEPrivate`\""], "InlineInput"], " \
context supplies a mini-language that the front-end understands. Here are \
some of it\[CloseCurlyQuote]s useful structures."}], "Text", 
      CellChangeTimes -> {{3.740847329536121*^9, 3.740847366072639*^9}}], 
     Cell["The language itself is much more rigid and inflexible, given that \
it\[CloseCurlyQuote]s closer to a DSL than a standard language.", "Text", 
      CellChangeTimes -> {{3.740847375151383*^9, 3.740847397751329*^9}}], 
     Cell[CellGroupData[{Cell[BoxData[RowBox[{"Select", "[", 
            "\[IndentingNewLine]", RowBox[{RowBox[{RowBox[{"StringSplit", 
                  "[", RowBox[{RowBox[{"Names", "[", "\"FEPrivate`*\"", 
                      "]"}], ",", " ", "\"`\""}], "]"}], "[", RowBox[
                 {"[", RowBox[{"All", ",", " ", RowBox[{"-", "1"}]}], "]"}], 
                "]"}], ",", "\[IndentingNewLine]", "NameQ"}], 
            "\[IndentingNewLine]", "]"}]], "Input", CellChangeTimes -> 
          {{3.764044885534068*^9, 3.76404491941953*^9}}, 
         CellLabel -> "In[260]:="], 
        Cell[BoxData[RowBox[{"{", RowBox[{"\"And\"", ",", "\"EmitSound\"", 
              ",", "\"FrontEndExecute\"", ",", "\"FrontEndResource\"", ",", 
              "\"FrontEndResourceString\"", ",", "\"Greater\"", ",", 
              "\"Head\"", ",", "\"If\"", ",", "\"Less\"", ",", "\"MemberQ\"", 
              ",", "\"Not\"", ",", "\"Or\"", ",", "\"Part\"", ",", 
              "\"SameQ\"", ",", "\"Set\"", ",", "\"SetDelayed\"", ",", 
              "\"Switch\"", ",", "\"UnsameQ\"", ",", "\"Which\"", ",", 
              "\"$ActivationKey\"", ",", "\"$OperatingSystem\"", ",", 
              "\"$SystemID\""}], "}"}]], "Output", CellChangeTimes -> 
          {3.764044920047565*^9}, CellLabel -> "Out[260]="]}, Open]], 
     Cell[CellGroupData[{Cell["If  / Switch / Which / And / Or / Not / \
MemberQ / SameQ / Head / Greater / Less / Part / Apply / Etc.", 
         "Subsubsection", CellChangeTimes -> {{3.7408473679114103*^9, 
          3.740847369983512*^9}, {3.764044882395557*^9, 
          3.764044884387442*^9}, {3.764044928117382*^9, 
          3.764044941635807*^9}, {3.764045012892125*^9, 
          3.7640450504067307*^9}, {3.7640938451822863*^9, 
          3.764093871196518*^9}}], Cell[TextData[{"These are basically the \
same as in the kernel, but obviously do not evaluate unless called via ", 
           Cell[BoxData["FE`Evaluate"], "InlineInput"], " on in the front-end \
itself. One thing to note is that many constructs are less powerful than in \
the kernel, so stick to simple things when possible."}], "Text", 
         CellChangeTimes -> {{3.764044946483357*^9, 3.764044993362814*^9}, 
          {3.7640450528785677*^9, 3.764045078790481*^9}, 
          {3.764045302545129*^9, 3.764045321672346*^9}}]}, Open]], 
     Cell[CellGroupData[{Cell["Set / SetDelayed", "Subsubsection", 
         CellChangeTimes -> {{3.764045338513692*^9, 3.764045344463983*^9}}], 
        Cell[TextData[{"These are used to represent ", Cell[BoxData["Set"], 
            "InlineInput"], " and ", Cell[BoxData["SetDelayed"], 
            "InlineInput"], ", as one would expect, but \
they\[CloseCurlyQuote]re almost always used with ", 
           Cell[BoxData["FrontEnd`SetValue"], "InlineInput"], 
           " as a wrapper, e.g.:"}], "Text", CellChangeTimes -> 
          {{3.764045346143793*^9, 3.764045378983756*^9}, 
          {3.7640456800997047*^9, 3.764045694057239*^9}, 
          {3.764092825725008*^9, 3.7640928309441977*^9}, 
          {3.764092884989841*^9, 3.764092904987669*^9}}], 
        Cell[BoxData[RowBox[{"MathLink`CallFrontEndHeld", "[", 
            RowBox[{"FrontEnd`SetValue", "@", RowBox[{"FEPrivate`Set", "[", 
                RowBox[{"myVar", ",", " ", "2"}], "]"}]}], "]"}]], "Code", 
         CellChangeTimes -> {{3.764092832858715*^9, 3.764092908188555*^9}}, 
         CellLabel -> "In[1059]:="], Cell[TextData[{"Now the FE remembers \
that and we can get that value back from it later, maybe in a ", 
           Cell[BoxData["DynamicBox"], "InlineInput"], ":"}], "Text", 
         CellChangeTimes -> {{3.7640929102943077*^9, 3.764092944810679*^9}}], 
        Cell[BoxData[RowBox[{"RawBoxes", "@", RowBox[{"DynamicBox", "[", 
              "myVar", "]"}]}]], "Code", CellChangeTimes -> 
          {{3.764092934998247*^9, 3.7640929536446447*^9}, 
          {3.7640930296893663*^9, 3.764093093947402*^9}, 
          {3.764093130653017*^9, 3.764093193196409*^9}, 
          {3.7640932292692223*^9, 3.764093229667488*^9}}, 
         CellLabel -> "In[1081]:="], 
        Cell[TextData[Cell[BoxData[GraphicsBox[TagBox[RasterBox[
               CompressedData[" \
1:eJzt17FqwlAUgGFNqwgiRlARHVQoIrh2qDhVQcgkWDo4Gmokgxa0UDI4O/gY \
bj6AOoqL4uKgiw4qLk4ODgo6eJp7BikttF3MpXB+OIZ4h3zDTaJh+TWrCCaT \
qWrTP7L598dKJa89ifrJc7mqFsuFF6n8VigWKg/yjf7lvT53+tzqAxRFURRF \
URRFGdZ2u4XJZAKHw4GbYTabgSzLEI1GwWw2A/tbwI6RSASazSacz2fDLK1W \
CxwOBxrYWK1WcDqdl3M2iqIYYhkMBpdrxuNxaLfbsN/vcW0+n0Mymbysdzod \
Q0z1eh1KpRKcTqdva7vdDnw+H3pUVTXE81u5XA49iUSCNwVLpVLoyWQyvCl4 \
z9tsNvQ0Gg3eHNA0DS0WiwWfCTzr9XogCAJ6arUaV8tisYBAIICWWCwGx+OR \
m2W1WkEwGESL3++H5XLJzbJeryEcDqPF5XLBdDrlZmH7NRQKoUUURRgOh9ws \
o9EI3G43WrxeL4zHY26WbrcLdrsdLR6PB+8rtp/Z++vrbDabq1rY7xz2bPn8 \
Lv9p0un0VT39fv/PFjaSJF3VQ1EURVHU/+gDPBM+Nw==     "], {{0, 52}, {36, 0}}, {0, 
                255}, ColorFunction -> RGBColor], BoxForm`ImageTag["Byte", 
               ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSize -> Magnification[0.5], ImageSizeRaw -> {36, 52}, 
             PlotRange -> {{0, 36}, {0, 52}}]], "Text"]], "Text", 
         CellChangeTimes -> {3.764093218546857*^9}], 
        Cell[TextData[{"Note that ", Cell[BoxData["myVar"], "InlineInput"], 
           " still has no value:"}], "Text", CellChangeTimes -> 
          {{3.764092962323741*^9, 3.764092968786332*^9}}], 
        Cell[CellGroupData[{Cell[BoxData["myVar"], "Code", CellChangeTimes -> 
             {3.764092970215575*^9}, CellLabel -> "In[1062]:="], 
           Cell[BoxData["myVar"], "Output", CellChangeTimes -> 
             {3.764092970536387*^9}, CellLabel -> "Out[1062]="]}, Open]], 
        Cell[TextData[{"And if we change that value of ", 
           Cell[BoxData["myVar"], "InlineInput"], " in the FE the ", 
           Cell[BoxData["Dynamic"], "InlineInput"], 
           " value will also update:"}], "Text", CellChangeTimes -> 
          {{3.7640930248786783*^9, 3.764093028109387*^9}, 
          {3.764093232707123*^9, 3.7640932534879103*^9}}], 
        Cell[BoxData[{RowBox[{RowBox[{"MathLink`CallFrontEndHeld", "[", 
               RowBox[{"FrontEnd`SetValue", "@", RowBox[{"FEPrivate`Set", 
                   "[", RowBox[{"myVar", ",", " ", "5"}], "]"}]}], "]"}], 
             " "}], "\n", RowBox[{"(*", " ", RowBox[{"now", " ", "the", " ", 
               "prior", " ", "DynamicBox", " ", "will", " ", "read", " ", 
               "5"}], " ", "*)"}]}], "Code", CellChangeTimes -> 
          {{3.764092832858715*^9, 3.764092908188555*^9}, 
          {3.764093261483799*^9, 3.7640932952106333*^9}}], 
        Cell["This can be useful as a way to set state. We can also use \
slightly more complicated patterns like:", "Text", CellChangeTimes -> 
          {{3.764093296937954*^9, 3.764093318450179*^9}}], 
        Cell[BoxData[RowBox[{"MathLink`CallFrontEnd", "@", "\n", "  ", 
            RowBox[{"FrontEnd`SetValue", "@", RowBox[{"FEPrivate`Set", "[", 
                RowBox[{RowBox[{"cache", "[", RowBox[{"EvaluationNotebook", 
                      "[", "]"}], "]"}], ",", " ", "5"}], "]"}]}]}]], "Code", 
         CellChangeTimes -> {{3.7640933213321133*^9, 3.764093349190256*^9}, 
          {3.764093403507615*^9, 3.7640934396368713*^9}, 
          {3.7640934754374447*^9, 3.7640934839885273*^9}, 
          {3.7640935470069027*^9, 3.764093547650189*^9}, 
          {3.764093638051239*^9, 3.764093661696163*^9}}, 
         CellLabel -> "In[1115]:="], Cell["And pull this with:", "Text", 
         CellChangeTimes -> {{3.7640935811462107*^9, 3.764093584833083*^9}}], 
        Cell[CellGroupData[{Cell[BoxData[RowBox[{"MathLink`CallFrontEnd", 
               "@", "\n", "  ", RowBox[{"FrontEnd`Value", "@", RowBox[
                  {"cache", "[", RowBox[{"EvaluationNotebook", "[", "]"}], 
                   "]"}]}]}]], "Code", CellChangeTimes -> 
             {{3.7640933213321133*^9, 3.764093349190256*^9}, 
             {3.764093403507615*^9, 3.7640934396368713*^9}, 
             {3.7640934754374447*^9, 3.7640934839885273*^9}, 
             {3.7640935470069027*^9, 3.764093547650189*^9}, 
             {3.764093588412471*^9, 3.764093594858473*^9}, 
             {3.764093642952073*^9, 3.764093656095957*^9}}, 
            CellLabel -> "In[1116]:="], Cell[BoxData["5"], "Output", 
            CellChangeTimes -> {3.7640935954359207*^9, 
              {3.7640936433127623*^9, 3.764093663892784*^9}}, 
            CellLabel -> "Out[1116]="]}, Open]], 
        Cell[TextData[{"Note, though, that this type of thing \
can\[CloseCurlyQuote]t be used with ", Cell[BoxData["DynamicBox"], 
            "InlineInput"], ", though"}], "Text", CellChangeTimes -> 
          {{3.764093360335133*^9, 3.764093373661356*^9}, 
          {3.7640934172226067*^9, 3.764093420477049*^9}, 
          {3.7640936184080887*^9, 3.7640936356717873*^9}}], 
        Cell[CellGroupData[{Cell[BoxData[RowBox[{"RawBoxes", "@", RowBox[
                {"DynamicBox", "[", RowBox[{"cache", "[", RowBox[
                    {"EvaluationNotebook", "[", "]"}], "]"}], "]"}]}]], 
            "Code", CellChangeTimes -> {{3.764093369428389*^9, 
              3.7640934010135813*^9}, {3.764093477853898*^9, 
              3.764093487140869*^9}, 3.7640935514486933*^9, 
              {3.7640936670573273*^9, 3.764093668840958*^9}}, 
            CellLabel -> "In[1117]:="], Cell[BoxData[DynamicBox[
              $CellContext`cache[EvaluationNotebook[]], ImageSizeCache -> {
                35.91900157928467, {6., 9.256000518798828}}]], "Output", 
            CellChangeTimes -> {3.764093669294264*^9}, CellLabel -> 
             "Out[1117]="]}, Open]], 
        Cell[TextData[{"The most common use of ", Cell[BoxData["Set"], 
            "InlineInput"], " and ", Cell[BoxData["SetDelayed"], 
            "InlineInput"], ", though, is in the ", 
           Cell[BoxData["CurrentValue"], "InlineInput"], 
           " mechanism. The way ", Cell[BoxData["CurrentValue"], 
            "InlineInput"], " updates is through ", 
           Cell[BoxData["FEPrivate`Set"], "InlineInput"], " and ", 
           Cell[BoxData["FEPrivate`SetDelayed"], "InlineInput"], "."}], 
         "Text", CellChangeTimes -> {{3.7640936993279133*^9, 
          3.7640937521502113*^9}}]}, Open]]}, Open]], 
  Cell[CellGroupData[{Cell["See Also:", "Subsection", 
      CellChangeTimes -> {{3.740847422113964*^9, 3.740847423360485*^9}}], 
     Cell[TextData[ButtonBox["https://mathematica.stackexchange.com/questions\
/13451/what-is-the-complete-list-of-valid-frontend-packet-types", 
        BaseStyle -> "Hyperlink", ButtonData -> {URL["https://mathematica.sta\
ckexchange.com/questions/13451/what-is-the-complete-list-of-valid-frontend-pa\
cket-types"], None}, ButtonNote -> "https://mathematica.stackexchange.com/que\
stions/13451/what-is-the-complete-list-of-valid-frontend-packet-types"]], 
      "Item", CellChangeTimes -> {{3.7408474307517977*^9, 
       3.740847433193959*^9}, {3.764094002276475*^9, 
       3.764094002279866*^9}}]}, Open]]}, WindowSize -> {808, 755}, 
 WindowMargins -> {{91, Automatic}, {37, Automatic}}, 
 FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
 StyleDefinitions -> FrontEnd`FileName[{"BTools"}, "MarkdownNotebook.nb", 
   CharacterEncoding -> "UTF-8"]]
